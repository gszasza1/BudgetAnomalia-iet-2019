<?xml version="1.0"?>
<project name="csv2rdf" default="dist" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">

	<description>CSV2RDF utility</description>


	<!-- Global Properties -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>

	<!-- test -->
	<property name="test.dir" location="src" />
	<property name="report.dir" location="report" />



	<property name="project.name" value="csv2rdf"/>
	<property name="project.version" value="0.1"/>

	<property name="mainclass" value="com.complexible.common.csv.CSV2RDF"/>


	<path id="test.path">
		<pathelement location="test/"/>
	</path>

	<path id="project.class.path">
		<pathelement location="lib/"/>
		<pathelement location="${build}"/>
		<fileset dir="lib">
			<include name="**/*.jar"/>
			<exclude name="**/${project.name}*.jar"/>
		</fileset>
	</path>

	<target name="clean" description="Clean up build files">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>

	</target>

	<target name="init">
		<pathconvert targetos="unix" property="classpath" refid="project.class.path"/>
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<target name="compile" depends="init">
		<javac includeantruntime="false" source="1.8" target="1.8" destdir="${build}" debug="yes" deprecation="yes">
			<classpath refid="project.class.path"/>
			<src path="${src}"/>
		</javac>
	</target>

	<target name="distfiles">
		<!-- Copy in lib files -->
		<mkdir dir="${dist}/lib"/>

		<copy todir="${dist}/lib">
			<fileset dir="lib">
				<include name="**/*.jar"/>
				<exclude name="**/${project.name}*.jar"/>
			</fileset>
		</copy>

		<copy todir="${dist}">
			<fileset dir=".">
				<include name="README.md"/>
				<include name="LICENSE.txt"/>
			</fileset>
		</copy>
	</target>

	<target name="dist" depends="compile, distfiles" description="Create a distribution">
		<!-- Generate relative classpath for jar file -->
		<property name="rlib" location="${basedir}/lib/"/>
		<pathconvert dirsep="/" pathsep=" " property="Class-Path">
			<map from="${rlib}/" to=""/>
			<map from="${rlib}\" to=""/>
			<path>
				<fileset dir="${rlib}">
					<include name="**/*.jar"/>
				</fileset>
			</path>
		</pathconvert>

		<!-- Make Jar file. -->
		<jar jarfile="${dist}/lib/${project.name}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="${mainclass}"/>
				<attribute name="Class-Path" value="${Class-Path}"/>

			</manifest>
		</jar>
	</target>

	<target name="zip" depends="dist" description="Create zip file of the distribution">
		<zip destfile="${dist}/${project.name}-${DSTAMP}.zip">
			<zipfileset dir="${dist}">
				<include name="**/*"/>
				<exclude name="**/*.zip"/>
			</zipfileset>
		</zip>
	</target>


	<target name="junit" depends="compile">
		<junit haltonfailure="yes">

			<classpath refid="project.class.path" />
			<classpath location="${build}" />
			<classpath location="lib/junit.jar" />
			<classpath location="lib/hamcrest.jar" />


			<formatter type="plain" usefile="false"/>
			<batchtest fork="yes" todir="${report.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>

		</junit>
	</target>

	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="lib/jacocoant.jar"/>
	</taskdef>

	<property name="testdest" location="jacoco"/>
	<target name="jacoco">

		<jacoco:coverage destfile="jacoco.exec">
			<junit fork="true" forkmode="once">

				<classpath refid="project.class.path" />
				<classpath location="${build}" />
				<classpath location="lib/junit.jar" />
				<classpath location="lib/hamcrest.jar" />

				<batchtest fork="yes" todir="${report.dir}">
					<fileset dir="${test.dir}">
						<include name="**/*Test*.java" />
					</fileset>
				</batchtest>

			</junit>
		</jacoco:coverage>

		<jacoco:report>

			<executiondata>
				<file file="jacoco.exec"/>
			</executiondata>

			<structure name="Example Project">
				<classfiles>
					<fileset dir="build"/>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="src"/>
				</sourcefiles>
			</structure>

			<html destdir="report"/>
			<xml destfile="reportfile.xml"/>

		</jacoco:report>

	</target>

</project>